{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\To do List\\\\Law-LLM\\\\src\\\\component\\\\Editor\\\\Editor.js\",\n  _s = $RefreshSig$();\n// Importing helper modules\nimport React, { useMemo, useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { marked } from \"marked\"; // Import the 'marked' library for Markdown conversion\n\n// Importing styles\nimport \"react-quill/dist/quill.snow.css\";\nimport styles from \"./styles.modules.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  // Sample markdown data with various markdown syntaxes\n  const markdownData = `\n  # Sample Form\n  # Section 1\n  **Question 1:** Describe your experience with React.\n  - **Question 2:** How do you manage state in React applications?\n  \n  **Section 2**\n  - **Question 1:** What are your thoughts on server-side rendering?\n  - **Question 2:** Explain the difference between CSS-in-JS and traditional CSS.\n\n  ### Table Example\n  | Syntax | Description |\n  | ----------- | ----------- |\n  | **Bold** | This is **bold** text |\n  | *Italic* | This is *italic* text |\n  | \\`Code\\` | This is \\`inline code\\` |\n  `;\n\n  // Convert markdown to HTML\n  const htmlData = useMemo(() => marked(markdownData), [markdownData]);\n  const modules = useMemo(() => ({\n    toolbar: false // Disable the toolbar\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.MyEditor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-purple-500 flex justify-center items-center pb-3 pt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-white\",\n        children: \"Forms Editor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 shadow-lg rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: htmlData,\n        modules: modules,\n        readOnly: true // Set editor to read-only\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"M0ABcqc5gnOHoyUuNA8ebRWuY2c=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useMemo","useRef","useState","ReactQuill","marked","styles","jsxDEV","_jsxDEV","Editor","_s","markdownData","htmlData","modules","toolbar","className","MyEditor","children","fileName","_jsxFileName","lineNumber","columnNumber","theme","value","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/To do List/Law-LLM/src/component/Editor/Editor.js"],"sourcesContent":["// Importing helper modules\r\nimport React, { useMemo, useRef, useState } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { marked } from \"marked\"; // Import the 'marked' library for Markdown conversion\r\n\r\n// Importing styles\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport styles from \"./styles.modules.css\";\r\n\r\nconst Editor = () => {\r\n  // Sample markdown data with various markdown syntaxes\r\n  const markdownData = `\r\n  # Sample Form\r\n  # Section 1\r\n  **Question 1:** Describe your experience with React.\r\n  - **Question 2:** How do you manage state in React applications?\r\n  \r\n  **Section 2**\r\n  - **Question 1:** What are your thoughts on server-side rendering?\r\n  - **Question 2:** Explain the difference between CSS-in-JS and traditional CSS.\r\n\r\n  ### Table Example\r\n  | Syntax | Description |\r\n  | ----------- | ----------- |\r\n  | **Bold** | This is **bold** text |\r\n  | *Italic* | This is *italic* text |\r\n  | \\`Code\\` | This is \\`inline code\\` |\r\n  `;\r\n\r\n  // Convert markdown to HTML\r\n  const htmlData = useMemo(() => marked(markdownData), [markdownData]);\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: false, // Disable the toolbar\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className={styles.MyEditor}>\r\n      <div className=\"bg-purple-500 flex justify-center items-center pb-3 pt-3\">\r\n        <h1 className=\"text-3xl font-bold text-white\">Forms Editor</h1>\r\n      </div>\r\n      <div className=\"bg-white p-6 shadow-lg rounded-lg\">\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          value={htmlData}\r\n          modules={modules}\r\n          readOnly={true} // Set editor to read-only\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;;AAEjC;AACA,OAAO,iCAAiC;AACxC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,YAAY,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;EAED;EACA,MAAMC,QAAQ,GAAGX,OAAO,CAAC,MAAMI,MAAM,CAACM,YAAY,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAEpE,MAAME,OAAO,GAAGZ,OAAO,CACrB,OAAO;IACLa,OAAO,EAAE,KAAK,CAAE;EAClB,CAAC,CAAC,EACF,EACF,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAET,MAAM,CAACU,QAAS;IAAAC,QAAA,gBAC9BT,OAAA;MAAKO,SAAS,EAAC,0DAA0D;MAAAE,QAAA,eACvET,OAAA;QAAIO,SAAS,EAAC,+BAA+B;QAAAE,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNb,OAAA;MAAKO,SAAS,EAAC,mCAAmC;MAAAE,QAAA,eAChDT,OAAA,CAACJ,UAAU;QACTkB,KAAK,EAAC,MAAM;QACZC,KAAK,EAAEX,QAAS;QAChBC,OAAO,EAAEA,OAAQ;QACjBW,QAAQ,EAAE,IAAK,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CA7CID,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AA+CZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}